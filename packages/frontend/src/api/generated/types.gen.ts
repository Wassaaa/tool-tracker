// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
  baseUrl: 'http://localhost:8000/api' | (string & {});
};

export type DomainEvent = {
  actor_id?: string;
  created_at?: string;
  id?: string;
  metadata?: string;
  notes?: string;
  tool_id?: string;
  type?: DomainEventType;
  user_id?: string;
};

export type DomainEventType =
  | 'TOOL_CREATED'
  | 'TOOL_UPDATED'
  | 'TOOL_DELETED'
  | 'TOOL_CHECKED_OUT'
  | 'TOOL_CHECKED_IN'
  | 'TOOL_MAINTENANCE'
  | 'TOOL_LOST'
  | 'USER_CREATED'
  | 'USER_UPDATED'
  | 'USER_DELETED';

export type DomainTool = {
  created_at?: string;
  current_user_id?: string;
  id?: string;
  last_checked_out_at?: string;
  name?: string;
  status?: DomainToolStatus;
  updated_at?: string;
};

export type DomainToolStatus = 'IN_OFFICE' | 'CHECKED_OUT' | 'MAINTENANCE' | 'LOST';

export type DomainUser = {
  created_at?: string;
  email?: string;
  id?: string;
  name?: string;
  role?: DomainUserRole;
  updated_at?: string;
};

export type DomainUserRole = 'EMPLOYEE' | 'ADMIN' | 'MANAGER';

export type ServerCheckinToolRequest = {
  notes?: string;
  user_id: string;
};

export type ServerCheckoutToolRequest = {
  notes?: string;
  user_id: string;
};

export type ServerCreateToolRequest = {
  name: string;
  status?: DomainToolStatus;
};

export type ServerCreateUserRequest = {
  email: string;
  name: string;
  role?: DomainUserRole;
};

export type ServerMaintenanceRequest = {
  notes?: string;
  user_id: string;
};

export type ServerMarkLostRequest = {
  notes?: string;
  user_id: string;
};

export type ServerStatsResponse = {
  tools_by_status?: {
    checked_out?: number;
    in_office?: number;
    lost?: number;
    maintenance?: number;
  };
  total_events?: number;
  total_tools?: number;
  total_users?: number;
  users_by_role?: {
    admins?: number;
    employees?: number;
    managers?: number;
  };
};

export type ServerUpdateToolRequest = {
  name: string;
  status?: DomainToolStatus;
};

export type ServerUpdateUserRequest = {
  email: string;
  name: string;
  role: DomainUserRole;
};

export type GetAdminAuditData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/admin/audit';
};

export type GetAdminAuditErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetAdminAuditError = GetAdminAuditErrors[keyof GetAdminAuditErrors];

export type GetAdminAuditResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type GetAdminAuditResponse = GetAdminAuditResponses[keyof GetAdminAuditResponses];

export type GetAdminStatsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/admin/stats';
};

export type GetAdminStatsErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetAdminStatsError = GetAdminStatsErrors[keyof GetAdminStatsErrors];

export type GetAdminStatsResponses = {
  /**
   * OK
   */
  200: ServerStatsResponse;
};

export type GetAdminStatsResponse = GetAdminStatsResponses[keyof GetAdminStatsResponses];

export type GetEventsData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Limit
     */
    limit?: number;
    /**
     * Offset
     */
    offset?: number;
    /**
     * Filter by event type
     */
    type?: string;
    /**
     * Filter by tool ID
     */
    tool_id?: string;
    /**
     * Filter by user ID
     */
    user_id?: string;
  };
  url: '/events';
};

export type GetEventsErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
};

export type GetEventsError = GetEventsErrors[keyof GetEventsErrors];

export type GetEventsResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: Array<DomainEvent>;
  };
};

export type GetEventsResponse = GetEventsResponses[keyof GetEventsResponses];

export type GetEventsByIdData = {
  body?: never;
  path: {
    /**
     * Event ID
     */
    id: string;
  };
  query?: never;
  url: '/events/{id}';
};

export type GetEventsByIdErrors = {
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type GetEventsByIdError = GetEventsByIdErrors[keyof GetEventsByIdErrors];

export type GetEventsByIdResponses = {
  /**
   * OK
   */
  200: DomainEvent;
};

export type GetEventsByIdResponse = GetEventsByIdResponses[keyof GetEventsByIdResponses];

export type GetToolsData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Limit
     */
    limit?: number;
    /**
     * Offset
     */
    offset?: number;
    /**
     * Filter by status
     */
    status?: string;
  };
  url: '/tools';
};

export type GetToolsErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
};

export type GetToolsError = GetToolsErrors[keyof GetToolsErrors];

export type GetToolsResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: Array<DomainTool>;
  };
};

export type GetToolsResponse = GetToolsResponses[keyof GetToolsResponses];

export type PostToolsData = {
  /**
   * Tool data
   */
  body: ServerCreateToolRequest;
  path?: never;
  query?: never;
  url: '/tools';
};

export type PostToolsErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
};

export type PostToolsError = PostToolsErrors[keyof PostToolsErrors];

export type PostToolsResponses = {
  /**
   * Created
   */
  201: DomainTool;
};

export type PostToolsResponse = PostToolsResponses[keyof PostToolsResponses];

export type DeleteToolsByIdData = {
  body?: never;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}';
};

export type DeleteToolsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type DeleteToolsByIdError = DeleteToolsByIdErrors[keyof DeleteToolsByIdErrors];

export type DeleteToolsByIdResponses = {
  /**
   * No Content
   */
  204: unknown;
};

export type GetToolsByIdData = {
  body?: never;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}';
};

export type GetToolsByIdErrors = {
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type GetToolsByIdError = GetToolsByIdErrors[keyof GetToolsByIdErrors];

export type GetToolsByIdResponses = {
  /**
   * OK
   */
  200: DomainTool;
};

export type GetToolsByIdResponse = GetToolsByIdResponses[keyof GetToolsByIdResponses];

export type PutToolsByIdData = {
  /**
   * Updated tool data
   */
  body: ServerUpdateToolRequest;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}';
};

export type PutToolsByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type PutToolsByIdError = PutToolsByIdErrors[keyof PutToolsByIdErrors];

export type PutToolsByIdResponses = {
  /**
   * OK
   */
  200: DomainTool;
};

export type PutToolsByIdResponse = PutToolsByIdResponses[keyof PutToolsByIdResponses];

export type PostToolsByIdCheckinData = {
  /**
   * Checkin data
   */
  body: ServerCheckinToolRequest;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}/checkin';
};

export type PostToolsByIdCheckinErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type PostToolsByIdCheckinError =
  PostToolsByIdCheckinErrors[keyof PostToolsByIdCheckinErrors];

export type PostToolsByIdCheckinResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostToolsByIdCheckinResponse =
  PostToolsByIdCheckinResponses[keyof PostToolsByIdCheckinResponses];

export type PostToolsByIdCheckoutData = {
  /**
   * Checkout data
   */
  body: ServerCheckoutToolRequest;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}/checkout';
};

export type PostToolsByIdCheckoutErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type PostToolsByIdCheckoutError =
  PostToolsByIdCheckoutErrors[keyof PostToolsByIdCheckoutErrors];

export type PostToolsByIdCheckoutResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostToolsByIdCheckoutResponse =
  PostToolsByIdCheckoutResponses[keyof PostToolsByIdCheckoutResponses];

export type GetToolsByIdHistoryData = {
  body?: never;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}/history';
};

export type GetToolsByIdHistoryErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetToolsByIdHistoryError = GetToolsByIdHistoryErrors[keyof GetToolsByIdHistoryErrors];

export type GetToolsByIdHistoryResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: Array<DomainEvent>;
  };
};

export type GetToolsByIdHistoryResponse =
  GetToolsByIdHistoryResponses[keyof GetToolsByIdHistoryResponses];

export type PostToolsByIdLostData = {
  /**
   * Lost data
   */
  body: ServerMarkLostRequest;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}/lost';
};

export type PostToolsByIdLostErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type PostToolsByIdLostError = PostToolsByIdLostErrors[keyof PostToolsByIdLostErrors];

export type PostToolsByIdLostResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostToolsByIdLostResponse =
  PostToolsByIdLostResponses[keyof PostToolsByIdLostResponses];

export type PostToolsByIdMaintenanceData = {
  /**
   * Maintenance data
   */
  body: ServerMaintenanceRequest;
  path: {
    /**
     * Tool ID
     */
    id: string;
  };
  query?: never;
  url: '/tools/{id}/maintenance';
};

export type PostToolsByIdMaintenanceErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type PostToolsByIdMaintenanceError =
  PostToolsByIdMaintenanceErrors[keyof PostToolsByIdMaintenanceErrors];

export type PostToolsByIdMaintenanceResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: unknown;
  };
};

export type PostToolsByIdMaintenanceResponse =
  PostToolsByIdMaintenanceResponses[keyof PostToolsByIdMaintenanceResponses];

export type GetUsersData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Limit
     */
    limit?: number;
    /**
     * Offset
     */
    offset?: number;
    /**
     * Filter by role (EMPLOYEE, ADMIN, MANAGER)
     */
    role?: string;
  };
  url: '/users';
};

export type GetUsersErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
};

export type GetUsersError = GetUsersErrors[keyof GetUsersErrors];

export type GetUsersResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: Array<DomainUser>;
  };
};

export type GetUsersResponse = GetUsersResponses[keyof GetUsersResponses];

export type PostUsersData = {
  /**
   * User data
   */
  body: ServerCreateUserRequest;
  path?: never;
  query?: never;
  url: '/users';
};

export type PostUsersErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
};

export type PostUsersError = PostUsersErrors[keyof PostUsersErrors];

export type PostUsersResponses = {
  /**
   * Created
   */
  201: DomainUser;
};

export type PostUsersResponse = PostUsersResponses[keyof PostUsersResponses];

export type DeleteUsersByIdData = {
  body?: never;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: '/users/{id}';
};

export type DeleteUsersByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type DeleteUsersByIdError = DeleteUsersByIdErrors[keyof DeleteUsersByIdErrors];

export type DeleteUsersByIdResponses = {
  /**
   * No Content
   */
  204: unknown;
};

export type GetUsersByIdData = {
  body?: never;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: '/users/{id}';
};

export type GetUsersByIdErrors = {
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type GetUsersByIdError = GetUsersByIdErrors[keyof GetUsersByIdErrors];

export type GetUsersByIdResponses = {
  /**
   * OK
   */
  200: DomainUser;
};

export type GetUsersByIdResponse = GetUsersByIdResponses[keyof GetUsersByIdResponses];

export type PutUsersByIdData = {
  /**
   * Updated user data
   */
  body: ServerUpdateUserRequest;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: '/users/{id}';
};

export type PutUsersByIdErrors = {
  /**
   * Bad Request
   */
  400: {
    [key: string]: string;
  };
  /**
   * Not Found
   */
  404: {
    [key: string]: string;
  };
};

export type PutUsersByIdError = PutUsersByIdErrors[keyof PutUsersByIdErrors];

export type PutUsersByIdResponses = {
  /**
   * OK
   */
  200: DomainUser;
};

export type PutUsersByIdResponse = PutUsersByIdResponses[keyof PutUsersByIdResponses];

export type GetUsersByIdActivityData = {
  body?: never;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: '/users/{id}/activity';
};

export type GetUsersByIdActivityErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetUsersByIdActivityError =
  GetUsersByIdActivityErrors[keyof GetUsersByIdActivityErrors];

export type GetUsersByIdActivityResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: Array<DomainEvent>;
  };
};

export type GetUsersByIdActivityResponse =
  GetUsersByIdActivityResponses[keyof GetUsersByIdActivityResponses];

export type GetUsersByIdToolsData = {
  body?: never;
  path: {
    /**
     * User ID
     */
    id: string;
  };
  query?: never;
  url: '/users/{id}/tools';
};

export type GetUsersByIdToolsErrors = {
  /**
   * Internal Server Error
   */
  500: {
    [key: string]: string;
  };
};

export type GetUsersByIdToolsError = GetUsersByIdToolsErrors[keyof GetUsersByIdToolsErrors];

export type GetUsersByIdToolsResponses = {
  /**
   * OK
   */
  200: {
    [key: string]: Array<string>;
  };
};

export type GetUsersByIdToolsResponse =
  GetUsersByIdToolsResponses[keyof GetUsersByIdToolsResponses];
